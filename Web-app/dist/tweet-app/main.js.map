{"version":3,"sources":["./src/app/post/all-posts/all-posts.component.html","./src/app/post/all-posts/all-posts.component.ts","./src/environments/environment.ts","./src/app/services/user/user.service.ts","./src/app/post/post-info/post-info.component.ts","./src/app/post/post-info/post-info.component.html","./src/app/site/login/login.component.html","./src/app/site/login/login.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/post/user-posts/user-posts.component.html","./src/app/post/user-posts/user-posts.component.ts","./src/app/post/add-post/add-post.component.ts","./src/app/post/add-post/add-post.component.html","./src/app/app.module.ts","./src/app/site/signup/signup.component.ts","./src/app/site/signup/signup.component.html","./src/environments/environment.prod.ts","./src/app/site/change-password/change-password.component.html","./src/app/site/change-password/change-password.component.ts","./src/app/util/date-ago.pipe.ts","./src/app/services/post/post.service.ts","./src/app/app-routing.module.ts","./src/app/post/post-edit/post-edit.component.ts","./src/app/post/post-edit/post-edit.component.html","./src/app/site/header/header.component.html","./src/app/site/header/header.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div>\n  <app-post-info *ngFor=\"let post of allPosts; let i = index \" (reloadAllPosts)=\"reloadAllPosts()\" [post]=\"post\" [i]=\"i\">\n  </app-post-info>\n  <div *ngIf=\"!(allPosts.length > 0)\" class=\"jumbotron jumbotron-fluid  alert-post\">\n    <div class=\"text-muted\">\n      No posts Available for this user...\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { PostService } from 'src/app/services/post/post.service';\nimport { Router } from '@angular/router';\nimport { PostInfo } from 'src/app/model/Post';\n\n@Component({\n  selector: 'app-all-posts',\n  templateUrl: './all-posts.component.html',\n  styleUrls: ['./all-posts.component.css']\n})\nexport class AllPostsComponent implements OnInit {\n\n  constructor(private userService: UserService, private postService: PostService, private router: Router) { }\n\n  allPosts: PostInfo[] = [];\n  searchPosts: PostInfo[] = [];\n\n  ngOnInit(): void {\n    this.postService.getAllPosts().subscribe((data) => {\n      \n      this.allPosts = data;\n      this.searchPosts = data;\n      \n    }, (error) => {\n      if (error.status != 401) {\n      \n      }\n    });\n\n    this.postService.filter.subscribe((author) => {\n      if (author !== '') {\n        const result = this.searchPosts.filter(\n          post => post.author.toLocaleLowerCase().includes(author.toLocaleLowerCase())\n        );\n        this.allPosts = result ? result : [];\n      } else {\n        this.allPosts = this.searchPosts;\n      }\n    })\n  }\n\n  reloadAllPosts() {\n    this.postService.getAllPosts().subscribe((data) => {\n      this.allPosts = data;\n      this.searchPosts = data;\n    }, (error) => {\n      if (error.status != 401) {\n      }\n    });\n  } \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { Register } from 'src/app/model/User';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private httpClient: HttpClient, private router : Router) { }\n\n  authenticationUrl = environment.baseUrl + 'login';\n\n  registerUrl = environment.baseUrl + 'register';\n\n  private loggedIn = false;\n  private token: string = '';\n  private username: string = '';\n\n  setLoggedIn(loggedIn : boolean) {\n    this.loggedIn = loggedIn;\n  }\n\n  isLoggedIn(){\n    return this.loggedIn;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n\n  getUsername() {\n    return this.username;\n  }\n\n\n  setToken(token: string) {\n    this.token = token;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  logOut() {\n    this.token = '';\n    this.username = '';\n    this.loggedIn = false;\n    this.router.navigate(['/login'])\n  }\n\n  public authenticate(username: string, password: string): Observable<any> {\n    let credentials = btoa(username + ':' + password)\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Basic ' + credentials);\n    return this.httpClient.get(this.authenticationUrl, { headers });\n  }\n\n  public addUser(user: Register): Observable<any> {\n    return this.httpClient.post<void>(this.registerUrl, user);\n  }\n\n}","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { PostInfo } from 'src/app/model/Post';\nimport { User } from 'src/app/model/User';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { PostService } from 'src/app/services/post/post.service';\nimport { Router } from '@angular/router';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-post-info',\n  templateUrl: './post-info.component.html',\n  styleUrls: ['./post-info.component.css']\n})\nexport class PostInfoComponent implements OnInit {\n\n  @Input() post!: PostInfo;\n\n  @Input() i: any;\n\n  @Output(\"reloadAllPosts\") reloadAllPosts: EventEmitter<any> = new EventEmitter();\n\n  @Output(\"reloadUserPosts\") reloadUserPosts: EventEmitter<any> = new EventEmitter();\n  \n  comment!: string;\n  commentflag = false;\n  isDeletedPost = false;\n\n  constructor(private userService: UserService, private postService: PostService, private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  addLikeToPost(tweetid : string){\n    this.postService.addLikeToPost(tweetid).subscribe((data) => {\n      this.reloadUserPosts.emit();\n      this.reloadAllPosts.emit();\n    })\n  }\n\n  deletePost(postId: String) {\n    this.isDeletedPost = true;\n    this.postService.deletePost(postId).subscribe((data) => {      \n        this.isDeletedPost = false;\n        this.reloadUserPosts.emit();\n        this.reloadAllPosts.emit();\n    },(error) => {\n        this.isDeletedPost = false;\n    })\n  }\n\n  addcomment(tweetid: string) {\n    if (this.comment) {\n      if (this.comment.trim()) {\n        this.commentflag = true;\n        const commentmessage = {\n            commentMessage : this.comment.trim()\n        }\n        this.postService.addCommentToPost(commentmessage , tweetid).subscribe((data) => {\n          setTimeout(() => {\n            this.commentflag = false;\n            this.reloadAllPosts.emit();\n            this.reloadUserPosts.emit();\n          }, 2000);\n        })\n      }\n    } \n  }\n\n  editPost(tweetId: String) {\n    this.router.navigate(['/edit-tweet', tweetId])\n  }\n\n  isUserValid(val: String) {\n    if (val == this.userService.getUsername()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isAuthenticated() {\n    return this.userService.isLoggedIn();\n  }\n\n}\n","<div class=\"card mb-2\">\n    <div class=\"user-profile mb-1\">\n        <img src=\"assets/snow.jpg\" alt=\"Avatar\">\n        <span class=\"ml-2\"> {{post.author}} </span>\n        <a class=\"text-muted\" *ngIf=\"isUserValid(post.author)\" data-toggle=\"collapse\" href=\"#List-{{ i }}\">\n            <i class=\"edit_post material-icons\" aria-expanded=\"false\">more_vert</i></a>\n        <div class=\"collapse post_time pointer\" id=\"List-{{ i }}\">\n            <small class=\"dropdown-item\"> <a (click)=\"editPost(post.id)\">Edit Post</a></small>\n            <small class=\"dropdown-item\"> <a (click)=\"deletePost(post.id)\">Delete Post</a></small>\n        </div>\n    </div>\n    <div class=\"card_top loading-top\">\n        <div class=\"spinner-border loading-icon\" *ngIf=\"isDeletedPost\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n        </div>\n        <img src=\"assets/snow.jpg\" alt=\"{{post.author}}\">\n    </div>\n    <div class=\"card-body body_padding\">\n        <div>\n            <span> <i class=\"like-symbol material-icons\" (click)=\"addLikeToPost(post.id)\">favorite_border</i> </span>\n            <a class=\"mt-1 text-muted\" data-toggle=\"collapse\" href=\"#comments_section{{i}}\"> <i\n                    class=\"material-icons comment-symbol\">view_comment</i></a>\n            <small class=\"post_time text-muted mt-1\"> {{post.dateOfPost | dateAgo}} </small>\n        </div>\n        <div>\n            <small>{{post.likesCount}}</small> <small> likes</small>\n        </div>\n        <div>\n            <span class=\"font-weight-bold\">{{post.author}}</span> {{post.postMessage}}\n            <br>\n            <span *ngIf=\"post.hasTag\">#{{post.hasTag}}</span>\n        </div>\n        <div>\n            <small class=\"pointer\">\n                <div *ngIf=\"(post.comments.length > 0)\"> <a class=\"text-muted\" data-toggle=\"collapse\"\n                        href=\"#comments_section{{i}}\" aria-expanded=\"true\">View All Comments</a>\n                </div>\n            </small>\n        </div>\n        <div>\n\n            <div class=\"comment_indent\">\n                <div *ngFor=\"let comment of post.comments\">\n                    <div *ngIf = \"(comment.dateOfComment | dateAgo) == 'Just now'\">\n                        <span class=\"font-weight-bold\">{{comment.author}} </span>\n                        <span class=\"text-break\">{{comment.commentMessage}}\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"comment_indent collapse\" id=\"comments_section{{i}}\">\n                <div *ngIf=\"!(post.comments.length > 0)\">\n                    <span class=\"font-weight-bold\">no comments available.. be first one to add comment. </span>\n                </div>\n                <div *ngFor=\"let comment of post.comments\">\n                    <div *ngIf=\"(comment.dateOfComment | dateAgo) != 'Just now'\">\n                        <span class=\"font-weight-bold\">{{comment.author}} </span>\n                        <span class=\"text-break\">{{comment.commentMessage}}\n                        </span>\n                    </div>                   \n                </div>\n            </div>\n        </div>\n        <div class=\"mt-1\" *ngIf=\"isAuthenticated()\">\n            <input type=\"text\" class=\"comment-input\" placeholder=\"Add your comment.\" [(ngModel)]=\"comment\"\n                name=\"comment\">\n            <button class=\"btn bg-purple text-light btn-sm post_time\" (click)=\"addcomment(post.id)\">Post</button>\n        </div>\n        <div class=\"mt-1\" *ngIf=\"commentflag\">\n            <div class=\"alert alert-secondary\">\n                posting.......\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"mt-4\">\n    <form class=\"container\" (ngSubmit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h4>Login</h4>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                        <div class=\"row mt-1 ml-1 mr-1\" *ngIf=\"!isLoginValid\">\n                            <div class=\"col-12 alert alert-danger\" role=\"alert\">\n                                Invalid Username/Password.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                        <label for=\"username\">Username</label><small class=\"text-danger\"> *</small>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">person</i> </span>\n                            <input type=\"text\" class=\"form-control search-icon-radius\" id=\"username\"\n                                placeholder=\"Enter Username\" ngModel name=\"username\" #username=\"ngModel\" required>\n                        </div>\n                        <small *ngIf = \"!loginForm.controls['username']?.valid && loginForm.controls['username']?.touched\" class=\"text-danger\">\n                            username is required...\n                        </small>\n                    </div>\n\n                    <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                        <label for=\"password\">Password</label><small class=\"text-danger\"> *</small>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">lock</i> </span>\n                            <input type=\"password\" class=\"form-control search-icon-radius\" id=\"password\"\n                                placeholder=\"Enter Password\" ngModel name=\"password\" #password=\"ngModel\" required>\n                        </div>\n                        <small *ngIf = \"!loginForm.controls['password']?.valid && loginForm.controls['password']?.touched\" class=\"text-danger\">\n                            password is required...\n                        </small>    \n                    </div>\n                </div>\n\n                <div class=\"form-row m-auto\">\n                    <button type=\"submit\" id=\"login\" class=\"mb-2 btn bg-purple text-light btn-block\">Sign in</button>\n                </div>\n                <p class=\"text-center bold\"><a routerLink=\"/change-password\">forgot password?</a></p>\n            </div>\n        </div>\n    </form>\n</div>\n\n<p class=\"text-center bold\">Don't have an account? <a routerLink=\"/signup\">Click here..!</a></p>","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoginValid = true;\n  error: string = ''\n\n  constructor(private userService: UserService, private router: Router) {  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(loginForm: NgForm) {\n    if(loginForm.value.username){\n      const username = loginForm.value.username.trim();\n      const password = loginForm.value.password;\n      this.userService.authenticate(username, password).subscribe((data) => {\n        \n        this.isLoginValid = true;\n        this.userService.setLoggedIn(true)\n        this.userService.setToken(data.token);\n        this.userService.setUsername(data.username);\n        this.router.navigate(['/']);\n        \n      } , (error) => {\n        this.isLoginValid = false;\n        \n        if(error.status == 401){\n          this.error = 'Invalid Usename/Password';\n        }\n      })\n    }\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tweet-app';\n}\n","<app-header></app-header>\n\n<div class=\"container-fluid mt-4 mb-4 pb-5\">\n  <router-outlet> </router-outlet>\n</div>","<div>\n\n    <app-post-info *ngFor=\"let post of userPosts; let i = index\" (reloadUserPosts)=\"reloadUserPosts()\" [post]=\"post\" [i]=\"i\">\n    </app-post-info>\n    \n    <div *ngIf='sessionTimedOut' class=\"jumbotron jumbotron-fluid  login-expired\">\n        <div class=\"text-muted\">\n            Opps! Session got expired... please login to continue...\n        </div>\n    </div>\n\n    <div *ngIf=\"!(userPosts.length > 0) && !sessionTimedOut\" class=\"jumbotron jumbotron-fluid  alert-post\">\n        <div class=\"text-muted\">\n          No posts Available for the user...\n        </div>\n      </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post/post.service';\nimport { PostInfo } from 'src/app/model/Post';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-posts',\n  templateUrl: './user-posts.component.html',\n  styleUrls: ['./user-posts.component.css']\n})\nexport class UserPostsComponent implements OnInit {\n\n  constructor(private postService: PostService, private router: Router) { }\n\n  userPosts: PostInfo[] = [];\n  sessionTimedOut = false ;\n  ngOnInit(): void {\n    this.postService.getUserPosts().subscribe((data) => {\n      this.userPosts = data;\n    }, (error) => {\n      if (error.status == 401) {\n        this.sessionTimedOut = true;\n      setTimeout(() => {\n        this.sessionTimedOut = false;\n        this.router.navigate(['/login']);\n      }, 3000);\n      }\n    });\n  }\n\n  reloadUserPosts() {\n    this.postService.getUserPosts().subscribe((data) => {\n      this.userPosts = data;\n    }, (error) => {\n      if (error.status == 401) {\n        this.sessionTimedOut = true;\n      setTimeout(() => {\n        this.sessionTimedOut = false;\n        this.router.navigate(['/login']);\n      }, 3000);\n      } else {\n        this.userPosts = []; \n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post/post.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n\n  constructor( private postService: PostService, private router : Router ) { }\n\n  addPostForm!: FormGroup;\n  posted = false;\n  posting = false; \n  posteditederror = false;\n\n  ngOnInit(): void {\n    this.addPostForm = new FormGroup({\n      id: new FormControl(null),\n      postMessage: new FormControl(null ),\n      hasTag: new FormControl(null)\n    })\n  }\n\n  onSubmitForm() {\n    if(this.addPostForm.value.hasTag){\n      this.addPostForm.patchValue({\n        hasTag: this.addPostForm.value.hasTag.split('#')[1] ? this.addPostForm.value.hasTag.split('#')[1] : this.addPostForm.value.hasTag\n      })\n    }\n    this.postService.addPost(this.addPostForm.value).subscribe((data) => {\n      this.posting = true;\n      this.posteditederror = false;\n      setTimeout(() => {\n        this.posting = false;\n        this.posted = true ;\n      }, 3000);\n    }, (error) => {\n      if (error.status != 401) {\n        this.posteditederror = true;\n      }\n    })\n  }\n}","<div *ngIf=\"!posting && !posted\" class=\"container-fluid ml-3 mb-5\">\n    <form [formGroup]=\" addPostForm\" (submit)=\"onSubmitForm()\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h4>\n                    Add Post\n                </h4>\n                <div class=\"form-group\">\n                    <label for=\"name\">Message</label>\n                    <textarea type=\"textarea\" id=\"postMessage\" class=\"form-control\" name=\"postMessage\"\n                        formControlName=\"postMessage\" required> </textarea>\n                    <small *ngIf = \"!addPostForm.valid && addPostForm.touched\" class=\"text-danger\">\n                        message required...\n                    </small>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"image\">hasTag</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"hasTag\" id=\"hasTag\" name=\"hasTag\">\n                </div>\n                <button class=\"btn bg-purple text-light\" [disabled]=\"!addPostForm.valid\" type=\"submit\">Post</button>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div *ngIf=\"posting\" class=\"alert alert-secondary mr-3\">\n    posting......\n    <div class=\"spinner-border loading-icon\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n\n<div *ngIf=\"posted\" class=\"alert alert-success mr-3\">\n    posted successfully.... \n   <a href=\"\" routerLink=\"/user-posts\">click here</a>\n    to view your posts... \n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './site/header/header.component';\nimport { SignupComponent } from './site/signup/signup.component';\nimport { LoginComponent } from './site/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChangePasswordComponent } from './site/change-password/change-password.component';\nimport { PostInfoComponent } from './post/post-info/post-info.component';\nimport { PostEditComponent } from './post/post-edit/post-edit.component';\nimport { UserPostsComponent } from './post/user-posts/user-posts.component';\nimport { AllPostsComponent } from './post/all-posts/all-posts.component';\nimport { DateAgoPipe } from './util/date-ago.pipe';\nimport { AddPostComponent } from './post/add-post/add-post.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SignupComponent,\n    LoginComponent,\n    ChangePasswordComponent,\n    PostInfoComponent,\n    PostEditComponent,\n    UserPostsComponent,\n    AllPostsComponent,\n    DateAgoPipe,\n    AddPostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Register } from 'src/app/model/User';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  createdUser = false;\n  errorUser = false;\n\n  newUser! : Register;\n  constructor(private userService: UserService, private router: Router) {\n\n  }\n\n  signupForm!: FormGroup;\n\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      'firstName': new FormControl(null, [Validators.required, Validators.minLength(3),\n      Validators.maxLength(20), Validators.pattern('^[a-z A-Z]*')]),\n      'lastName': new FormControl(null, [Validators.required, Validators.minLength(3),\n      Validators.maxLength(20), Validators.pattern('^[a-z A-Z]*')]),\n      'username': new FormControl(null, [Validators.required, Validators.minLength(3),\n      Validators.maxLength(40)]),\n      'email': new FormControl(null, [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$')]),\n      'password': new FormControl(null, [Validators.required]),\n      'confirmpassword': new FormControl(null, [Validators.required]),\n      'contactNumber': new FormControl(null, [Validators.required, Validators.maxLength(13), Validators.pattern('^[0-9+]*')])\n    });\n   }\n\n  onSubmitSignupForm() {\n    this.userService.addUser(this.signupForm.value).subscribe((data) => {\n      this.errorUser = false;\n      this.createdUser = true;\n      setTimeout(() => {\n        this.createdUser = false;\n        this.router.navigate(['/login']);\n          }, 5000);      \n    },(error) => {\n      this.errorUser = true;\n      \n    })\n  }\n\n  isConfirmPasswordValid() {\n    if ((this.signupForm.get('password')?.value != null) && this.signupForm.get('confirmpassword')?.value != null) {\n      if ((this.signupForm.get('password')?.value != this.signupForm.get('confirmpassword')?.value)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n}\n","<div *ngIf = \"createdUser\">\n    <div class=\"alert alert-success\">\n        details saved successfully.... redirecting to login page....\n        <small class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n        </small>\n    </div>\n</div>\n\n<div *ngIf = \"errorUser\">\n    <div class=\"alert alert-danger\">\n        user already exists.... click on login to proceed....\n    </div>\n</div>\n\n<form class=\"container justify-content-center\" [formGroup]=\"signupForm\" (submit)=\"onSubmitSignupForm()\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h2>Register</h2>\n            <div class=\"form-row\">\n                <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                    <label for=\"firstName\">First Name</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter First Name\" id=\"firstName\"\n                        formControlName=\"firstName\" required>\n                    <div\n                        *ngIf=\"signupForm.controls['firstName']?.invalid && (signupForm.controls['firstName']?.touched || signupForm.controls['firstName']?.dirty)\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['firstName']?.hasError('required') && signupForm.controls['firstName']?.touched\">\n                            firstName is required...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['firstName']?.hasError('minlength') && signupForm.controls['firstName']?.touched\">\n                            firstName should have atleast 3 letters...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['firstName']?.hasError('maxlength') && signupForm.controls['firstName']?.touched\">\n                            firstName should not exceed atleast 20 letters...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['firstName']?.hasError('pattern') && signupForm.controls['firstName']?.touched\">\n                            firstName should not contain symbols or numerical values...\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                    <label for=\"lastName\">Last Name</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Last Name\" id=\"lastName\"\n                        formControlName=\"lastName\">\n                    <div\n                        *ngIf=\"signupForm.controls['lastName']?.invalid && (signupForm.controls['lastName']?.touched || signupForm.controls['lastName']?.dirty)\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['lastName']?.hasError('required') && signupForm.controls['lastName']?.touched\">\n                            lastName is required...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['lastName']?.hasError('minlength') && signupForm.controls['lastName']?.touched\">\n                            lastName should have atleast 3 letters...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['lastName']?.hasError('maxlength') && signupForm.controls['lastName']?.touched\">\n                            lastName should not exceed atleast 20 letters...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['lastName']?.hasError('pattern') && signupForm.controls['lastName']?.touched\">\n                            lastName should not contain symbols or numerical values...\n                        </small>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                    <label for=\"email\">Email</label>\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text search-box-radius\">@</span>\n                        <input type=\"text\" class=\"form-control search-icon-radius\" placeholder=\"Enter Email\" id=\"email\"\n                            formControlName=\"email\" required>\n                    </div>\n                    <div\n                        *ngIf=\"signupForm.controls['email']?.invalid && (signupForm.controls['email']?.touched || signupForm.controls['email']?.dirty)\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['email']?.hasError('required') && signupForm.controls['email']?.touched\">\n                            email is required...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['email']?.hasError('pattern') && signupForm.controls['email']?.touched\">\n                            enter valid email address...\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group col-sm-/12 col-md-6 col-lg-6\">\n                    <label for=\"contactNumber\">Mobile Number</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Mobile Number\" id=\"contactNumber\"\n                        formControlName=\"contactNumber\">\n                    <div\n                        *ngIf=\"signupForm.controls['contactNumber']?.invalid && (signupForm.controls['contactNumber']?.touched || signupForm.controls['contactNumber']?.dirty)\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['contactNumber']?.hasError('required') && signupForm.controls['contactNumber']?.touched\">\n                            contactNumber is required...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['contactNumber']?.hasError('maxlength') && signupForm.controls['contactNumber']?.touched\">\n                            enter a valid contactNumber...\n                        </small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"signupForm.controls['contactNumber']?.hasError('pattern') && signupForm.controls['contactNumber']?.touched\">\n                            contactNumber should not contain letters...\n                        </small>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <label for=\"username\">Username</label>\n                <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">person</i> </span>\n                        <input type=\"input-group-text\" class=\"form-control search-icon-radius\"\n                            placeholder=\"Enter Username\" id=\"username\" formControlName=\"username\" required>\n                    </div>\n                    <div\n                            *ngIf=\"signupForm.controls['username']?.invalid && (signupForm.controls['username']?.touched || signupForm.controls['username']?.dirty)\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"signupForm.controls['username']?.hasError('required') && signupForm.controls['username']?.touched\">\n                                username is required...\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"signupForm.controls['username']?.hasError('maxlength') && signupForm.controls['username']?.touched\">\n                                username not exceed 40 characters..\n                            </small>\n                        </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <label for=\"username\">Password</label>\n                <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">lock</i> </span>\n                        <input type=\"password\" class=\"form-control search-icon-radius\" placeholder=\"Enter Password\"\n                            id=\"Password\" formControlName=\"password\">\n                    </div>\n                    <div\n                            *ngIf=\"signupForm.controls['password']?.invalid && (signupForm.controls['password']?.touched || signupForm.controls['password']?.dirty)\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"signupForm.controls['password']?.hasError('required') && signupForm.controls['password']?.touched\">\n                                password is required...\n                            </small>\n                        </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <label for=\"confirmpassword\">Confirm Password</label>\n                <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">lock</i> </span>\n                        <input type=\"password\" class=\"form-control search-icon-radius\"\n                            placeholder=\"Enter Confirm Password\" id=\"confirmpassword\" formControlName=\"confirmpassword\">\n                    </div>\n                    <small class=\"text-danger\" *ngIf=\"isConfirmPasswordValid()\">\n                        <div> Passwords must match</div>\n                    </small>\n                </div>\n            </div>\n\n            <div class=\"form-row\"> \n                <button type=\"submit\" [disabled] = \"!signupForm.valid || isConfirmPasswordValid()\" class=\"btn bg-purple text-light\">Register</button>\n                <p class=\"m-auto bold\"><a routerLink=\"/login\">Already have an account?</a></p>\n            </div>\n        </div>\n    </div>\n</form>","export const environment = {\n  production: true,\n  baseUrl:\"http://localhost:8050/api/v1.0/tweets/\"\n};\n","<div class=\"mt-4\">\n    <form class=\"container\" (ngSubmit)=\"onSubmit(changeDetailsForm)\" #changeDetailsForm=\"ngForm\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h2>Change Password</h2>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"row mt-1 ml-1 mr-1\" *ngIf=\"!detailsSaved\">\n                            <div class=\"col-12 alert alert-danger\" role=\"alert\">\n                                Incorrect user details.\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                        <label for=\"username\">Username</label> <small class=\"text-danger\"> *</small>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">person</i> </span>\n                            <input type=\"text\" class=\"form-control search-icon-radius\" id=\"username\"\n                                placeholder=\"Enter Username\" ngModel name=\"username\" #username=\"ngModel\" required>\n                        </div>\n                        <small *ngIf = \"!changeDetailsForm.controls['username']?.valid && changeDetailsForm.controls['username']?.touched\" class=\"text-danger\">\n                            username is required...\n                        </small>\n                    </div>\n\n                    <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                        <label for=\"email\">Email</label><small class=\"text-danger\"> *</small>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">person</i> </span>\n                            <input type=\"text\" class=\"form-control search-icon-radius\" id=\"email\"\n                                placeholder=\"Enter Email\" ngModel name=\"email\" #email=\"ngModel\" required>\n                        </div>\n                        <small *ngIf = \"!changeDetailsForm.controls['email']?.valid && changeDetailsForm.controls['email']?.touched\" class=\"text-danger\">\n                            email is required...\n                        </small>\n                    </div>\n\n                    <div class=\"form-group col-sm-12 col-md-12 col-lg-12\">\n                        <label for=\"password\">New Password</label><small class=\"text-danger\"> *</small>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text search-box-radius\"> <i class=\"material-icons\">lock</i> </span>\n                            <input type=\"password\" class=\"form-control search-icon-radius\" id=\"password\"\n                                placeholder=\"Enter Password\" ngModel name=\"password\" #password=\"ngModel\" required>\n                        </div>\n                        <small *ngIf = \"!changeDetailsForm.controls['password']?.valid && changeDetailsForm.controls['password']?.touched\" class=\"text-danger\">\n                            password is required...\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-row m-auto\">\n                    <button type=\"submit\" id=\"login\" class=\"mb-2 btn bg-purple text-light btn-block\" >Change Password</button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  detailsSaved = true;\n  \n  onSubmit(changeDetailsForm: NgForm) {\n    \n    console.log(\"login successfully\");\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'dateAgo',\r\n    pure: true\r\n})\r\n\r\nexport class DateAgoPipe implements PipeTransform {\r\n\r\n    transform(value: any): any {\r\n        if (value) {\r\n            \r\n            const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\r\n            \r\n            const intervals = {\r\n                'year': 31536000,\r\n                'month': 2592000,\r\n                'week': 604800,\r\n                'day': 86400,\r\n                'hour': 3600,\r\n                'minute': 60,\r\n                'second': 1\r\n            };\r\n\r\n            if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\r\n                return 'Just now';\r\n            else if (seconds > 29 && seconds < intervals.minute)\r\n                return seconds + 'seconds ago'\r\n            else if (seconds > intervals.minute && seconds < intervals.hour)\r\n                return Math.floor(seconds / intervals.minute) === 1 ? Math.floor(seconds / intervals.minute) + ' min ago' : Math.floor(seconds / intervals.minute) + ' mins ago'\r\n            else if (seconds > intervals.hour && seconds < intervals.day)\r\n                return Math.floor(seconds / intervals.hour) === 1 ? Math.floor(seconds / intervals.hour) + ' hour ago' : Math.floor(seconds / intervals.hour) + ' hours ago'\r\n            else if (seconds > intervals.day && seconds < intervals.week)\r\n                return Math.floor(seconds / intervals.day) === 1 ? Math.floor(seconds / intervals.day) + ' day ago' : Math.floor(seconds / intervals.day) + ' days ago'\r\n            else if (seconds > intervals.week && seconds < intervals.month)\r\n                return Math.floor(seconds / intervals.week) === 1 ? Math.floor(seconds / intervals.week) + ' week ago' : Math.floor(seconds / intervals.week) + ' weeks ago'\r\n            else if (seconds > intervals.month && seconds < intervals.year)\r\n                return Math.floor(seconds / intervals.month) === 1 ? Math.floor(seconds / intervals.month) + ' month ago' : Math.floor(seconds / intervals.month) + ' months ago'\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserService } from '../user/user.service';\nimport { Observable, Subject } from 'rxjs';\nimport { PostInfo } from 'src/app/model/Post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private userService: UserService, private httpClient: HttpClient) { }\n\n  filter = new Subject<string>();\n\n  getAllPostsUrl = environment.baseUrl + 'all';\n  getUserPostsUrl = environment.baseUrl;    //append username\n  getPostByIdUrl = environment.baseUrl + 'tweetBy/';  //append postId\n  deletePostByIdUrl = environment.baseUrl + 'delete/';   //append postId\n  updatePostUrl = environment.baseUrl + 'update/';  //append postId\n\n  addPostUrl = environment.baseUrl;  //append postId\n  addCommentUrl = environment.baseUrl;  //append postId\n\n  addLikeUrl = environment.baseUrl + 'like/';  //append postId\n\n  getHttpOptions() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.userService.getToken()\n      })\n    }\n    return httpOptions;\n  }\n\n  getAllPosts(): Observable<any> {\n    return this.httpClient.get(this.getAllPostsUrl)\n  }\n\n  getUserPosts(): Observable<any> {\n    return this.httpClient.get(this.getUserPostsUrl + this.userService.getUsername(), this.getHttpOptions());\n  }\n\n  deletePost(postId: String): Observable<any> {\n    return this.httpClient.delete(this.deletePostByIdUrl + postId, this.getHttpOptions());\n  }\n\n  getPostByID(postId: string): Observable<any> {\n    return this.httpClient.get(this.getPostByIdUrl + postId, this.getHttpOptions());\n  }\n\n  modifyPost(post: PostInfo): Observable<any> {\n    return this.httpClient.put(this.updatePostUrl + post.id, post, this.getHttpOptions());\n  }\n\n  addPost(post: PostInfo): Observable<any> {\n    return this.httpClient.post(`${this.addPostUrl}${this.userService.getUsername()}/add`, post, this.getHttpOptions());\n  }\n\n  addCommentToPost(comment: any, tweetId : string): Observable<any> {\n    return this.httpClient.post(`${this.addPostUrl}${this.userService.getUsername()}/comment/${tweetId}`, comment, this.getHttpOptions());\n  }\n\n  addLikeToPost(tweetId : string): Observable<any> {\n    return this.httpClient.put(`${this.addLikeUrl}${tweetId}`,null, this.getHttpOptions());\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './site/login/login.component';\nimport { SignupComponent } from './site/signup/signup.component';\nimport { ChangePasswordComponent } from './site/change-password/change-password.component';\nimport { AllPostsComponent } from './post/all-posts/all-posts.component';\nimport { UserPostsComponent } from './post/user-posts/user-posts.component';\nimport { PostEditComponent } from './post/post-edit/post-edit.component';\nimport { AddPostComponent } from './post/add-post/add-post.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'view-all-posts', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'change-password', component: ChangePasswordComponent },\n  { path: 'view-all-posts', component: AllPostsComponent },\n  { path: 'user-posts', component: UserPostsComponent },\n  { path: 'edit-tweet/:tweetId', component: PostEditComponent },\n  { path: 'add-tweet', component: AddPostComponent },\n\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PostService } from 'src/app/services/post/post.service';\nimport { PostInfo } from 'src/app/model/Post';\nimport { error } from 'protractor';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private postService: PostService) { }\n\n  editPostForm!: FormGroup;\n  postedited = false;\n  posteditederror = false;\n\n  ngOnInit(): void {\n    this.editPostForm = new FormGroup({\n      id: new FormControl(null),\n      postMessage: new FormControl(null),\n      hasTag: new FormControl(null)\n    })\n\n    this.route.params.subscribe((params: Params) => {\n      const tweetId = params['tweetId'];\n      this.postService.getPostByID(tweetId).subscribe((post: PostInfo) => {\n        this.editPostForm.patchValue({\n          id: post.id,\n          postMessage: post.postMessage,\n          hasTag: '#' + post.hasTag\n        })\n      })\n    })\n  }\n\n  onSubmitForm() {\n    this.editPostForm.patchValue({\n      hasTag: this.editPostForm.value.hasTag.split('#')[1] ? this.editPostForm.value.hasTag.split('#')[1] : this.editPostForm.value.hasTag\n    })\n    this.postService.modifyPost(this.editPostForm.value).subscribe((data) => {\n      this.postedited = true;\n      this.posteditederror = false;\n    }, (error) => {\n      if (error.status != 401) {\n        this.posteditederror = true;\n      }\n    })\n  }\n}","<div class=\"container-fluid ml-3 mb-5\">\n    <form [formGroup]=\" editPostForm\" (submit)=\"onSubmitForm()\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Message</label>\n                    <textarea type=\"textarea\" id=\"postMessage\" class=\"form-control\" name=\"postMessage\"\n                        formControlName=\"postMessage\"> </textarea>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"image\">hasTag</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"hasTag\" id=\"hasTag\" name=\"hasTag\">\n                </div>\n                <button class=\"btn bg-purple text-light\" [disabled]=\"!editPostForm.valid\" type=\"submit\">Save</button>\n            </div>\n        </div>\n    </form>\n</div>","<div>\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-custom\">\n        <a class=\"disable\" style=\"padding-left: 6vw;\"> </a>\n        <a class=\"navbar-brand text-light\"  routerLink=\"\">\n            <i class=\"material-icons mt-2\">groups</i>\n        </a>\n        <a class=\"navbar-brand text-light\" routerLink=\"\"> tweetApp </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\n            aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link text-light\" *ngIf=\"isAuthenticated()\" routerLink=\"add-tweet\">New Post</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link text-light\" *ngIf=\"isAuthenticated()\" routerLink=\"user-posts\">My Posts</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"padding-right: 1vw;\">\n                    <a class=\"nav-link text-light\" routerLink=\"/\">All Posts</a>\n                </li>\n\n                <li class=\"nav-item mt-1\">\n                    <div class=\"input-append\">\n                        <form class=\"form-inline\">\n                            <input class=\"form-control search-box-radius searchbar\" type=\"search\" placeholder=\"posts by user\"\n                                aria-label=\"Search\" (input)=\"OnSearchPeople($event)\">\n                                <button class=\"input-group-text mr-sm-2 bg-inherit-from-parent search-icon-radius\">\n                                    <i class=\"material-icons text-light\">search</i>\n                                </button>\n                        </form>\n                    </div>\n                </li>\n\n                <li class=\"nav-item mt-1 pb-1\" *ngIf=\"!isAuthenticated()\" style=\"padding-right: 5vw;\">\n                    <div class=\"input-group\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text bg-inherit-from-parent\" id=\"addon-wrapping\">\n                                <i class=\"material-icons text-light\">person</i>\n                            </span>\n                            <button type=\"button\"\n                                class=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split bg-inherit-from-parent\"\n                                 data-toggle=\"dropdown\" aria-expanded=\"false\">\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a class=\"dropdown-item\" routerLink=\"login\">Login</a>\n                                <a class=\"dropdown-item\" routerLink=\"signup\">Signup</a>\n                                <a class=\"dropdown-item\" routerLink=\"change-password\">forgot password?</a>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n\n                <li class=\"nav-item mt-1 pb-1\" *ngIf=\"isAuthenticated()\" style=\"padding-right: 5vw;\">\n                    <div class=\"input-group\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text bg-inherit-from-parent\" id=\"addon-wrapping\">\n                                <i class=\"material-icons text-light\">person</i>\n                            </span>\n                            <button type=\"button\"\n                                class=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split bg-inherit-from-parent\"\n                                 data-toggle=\"dropdown\" aria-expanded=\"false\">\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a class=\"dropdown-item disabled\">\n                                    {{getUsername()}}\n                                </a>\n                                <div role=\"separator\" class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item\" routerLink=\"menu\">Edit profile</a>\n                                <a class=\"dropdown-item\" routerLink=\"change-password\">change password</a>\n                                <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n\n\n                <li style=\"padding-right:80px;\"></li>\n            </ul>\n        </div>\n    </nav>\n</div>\n\n\n<footer class=\"navbar text-light fixed-bottom d-flex justify-content-center bg-custom\">\n    <div> Copyright 2021 </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { PostService } from 'src/app/services/post/post.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private userService: UserService, private postService:PostService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  isAuthenticated() {\n    return this.userService.isLoggedIn();\n  }\n\n  OnSearchPeople(event : any){\n    this.router.navigate(['/']);\n    this.postService.filter.next(event.target.value);    \n  }\n\n  getUsername(){\n    return this.userService.getUsername();\n  }\n\n  logout(){\n    this.userService.logOut();\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}